// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Bomtrato.Backend.Data;

namespace Bomtrato.Backend.Data.Migrations
{
    [DbContext(typeof(BomtratoContext))]
    [Migration("20210501173042_adicionadoCampoAtivo")]
    partial class adicionadoCampoAtivo
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Bomtrato.Backend.Data.Entities;.Perfil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Perfis");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Aprovador"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Publico"
                        });
                });

            modelBuilder.Entity("Bomtrato.Backend.Data.Entities;.Processo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Aprovado")
                        .HasColumnType("bit");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Escritorio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("NumeroProcesso")
                        .HasColumnType("bigint");

                    b.Property<string>("Reclamante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Processos");
                });

            modelBuilder.Entity("Bomtrato.Backend.Data.Entities;.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Bomtrato.Backend.Data.Entities;.UsuarioPerfil", b =>
                {
                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("PerfilId")
                        .HasColumnType("int");

                    b.HasKey("UsuarioId", "PerfilId");

                    b.HasIndex("PerfilId");

                    b.ToTable("UsuarioPerfil");
                });

            modelBuilder.Entity("Bomtrato.Backend.Data.Entities;.Processo", b =>
                {
                    b.HasOne("Bomtrato.Backend.Data.Entities;.Usuario", "Usuario")
                        .WithMany("Processos")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Bomtrato.Backend.Data.Entities;.UsuarioPerfil", b =>
                {
                    b.HasOne("Bomtrato.Backend.Data.Entities;.Perfil", "Perfil")
                        .WithMany("UsuariosPerfis")
                        .HasForeignKey("PerfilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bomtrato.Backend.Data.Entities;.Usuario", "Usuario")
                        .WithMany("UsuariosPerfis")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Perfil");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Bomtrato.Backend.Data.Entities;.Perfil", b =>
                {
                    b.Navigation("UsuariosPerfis");
                });

            modelBuilder.Entity("Bomtrato.Backend.Data.Entities;.Usuario", b =>
                {
                    b.Navigation("Processos");

                    b.Navigation("UsuariosPerfis");
                });
#pragma warning restore 612, 618
        }
    }
}
